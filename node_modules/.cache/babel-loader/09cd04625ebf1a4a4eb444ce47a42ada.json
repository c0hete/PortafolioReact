{"ast":null,"code":"import _objectSpread from \"C:/react-portfolio-website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/react-portfolio-website/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"positions\"];\nimport { createPathComponent } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport var Polyline = createPathComponent(function createPolyline(_ref, ctx) {\n  var positions = _ref.positions,\n      options = _objectWithoutProperties(_ref, _excluded);\n\n  var instance = new LeafletPolyline(positions, options);\n  return {\n    instance: instance,\n    context: _objectSpread(_objectSpread({}, ctx), {}, {\n      overlayContainer: instance\n    })\n  };\n}, function updatePolyline(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});","map":{"version":3,"sources":["C:/react-portfolio-website/node_modules/react-leaflet/esm/Polyline.js"],"names":["createPathComponent","Polyline","LeafletPolyline","createPolyline","_ref","ctx","positions","options","instance","context","overlayContainer","updatePolyline","layer","props","prevProps","setLatLngs"],"mappings":";;;AAAA,SAASA,mBAAT,QAAoC,qBAApC;AACA,SAASC,QAAQ,IAAIC,eAArB,QAA4C,SAA5C;AACA,OAAO,IAAMD,QAAQ,GAAGD,mBAAmB,CAAC,SAASG,cAAT,CAAwBC,IAAxB,EAA8BC,GAA9B,EAAmC;AAC7E,MACEC,SADF,GAGIF,IAHJ,CACEE,SADF;AAAA,MAEKC,OAFL,4BAGIH,IAHJ;;AAIA,MAAMI,QAAQ,GAAG,IAAIN,eAAJ,CAAoBI,SAApB,EAA+BC,OAA/B,CAAjB;AACA,SAAO;AACLC,IAAAA,QAAQ,EAARA,QADK;AAELC,IAAAA,OAAO,kCAAOJ,GAAP;AACLK,MAAAA,gBAAgB,EAAEF;AADb;AAFF,GAAP;AAMD,CAZ0C,EAYxC,SAASG,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiD;AAClD,MAAID,KAAK,CAACP,SAAN,KAAoBQ,SAAS,CAACR,SAAlC,EAA6C;AAC3CM,IAAAA,KAAK,CAACG,UAAN,CAAiBF,KAAK,CAACP,SAAvB;AACD;AACF,CAhB0C,CAApC","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport const Polyline = createPathComponent(function createPolyline(_ref, ctx) {\n  let {\n    positions,\n    ...options\n  } = _ref;\n  const instance = new LeafletPolyline(positions, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updatePolyline(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});"]},"metadata":{},"sourceType":"module"}