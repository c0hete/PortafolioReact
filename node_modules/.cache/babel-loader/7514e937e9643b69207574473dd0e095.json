{"ast":null,"code":"import _objectWithoutProperties from \"C:/react-portfolio-website/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"attributes\", \"bounds\"],\n    _excluded2 = [\"children\"];\nimport { createElementHook, createLayerHook, updateMediaOverlay } from '@react-leaflet/core';\nimport { SVGOverlay as LeafletSVGOverlay } from 'leaflet';\nimport { forwardRef, useImperativeHandle } from 'react';\nimport { createPortal } from 'react-dom';\nexport var useSVGOverlayElement = createElementHook(function createSVGOverlay(props, context) {\n  var attributes = props.attributes,\n      bounds = props.bounds,\n      options = _objectWithoutProperties(props, _excluded);\n\n  var container = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  container.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n  if (attributes != null) {\n    Object.keys(attributes).forEach(function (name) {\n      container.setAttribute(name, attributes[name]);\n    });\n  }\n\n  return {\n    instance: new LeafletSVGOverlay(container, bounds, options),\n    container: container,\n    context: context\n  };\n}, updateMediaOverlay);\nexport var useSVGOverlay = createLayerHook(useSVGOverlayElement);\n\nfunction SVGOverlayComponent(_ref, ref) {\n  var children = _ref.children,\n      options = _objectWithoutProperties(_ref, _excluded2);\n\n  var _useSVGOverlay$curren = useSVGOverlay(options).current,\n      instance = _useSVGOverlay$curren.instance,\n      container = _useSVGOverlay$curren.container;\n  useImperativeHandle(ref, function () {\n    return instance;\n  });\n  return container == null || children == null ? null : /*#__PURE__*/createPortal(children, container);\n}\n\nexport var SVGOverlay = /*#__PURE__*/forwardRef(SVGOverlayComponent);","map":{"version":3,"sources":["C:/react-portfolio-website/node_modules/react-leaflet/esm/SVGOverlay.js"],"names":["createElementHook","createLayerHook","updateMediaOverlay","SVGOverlay","LeafletSVGOverlay","forwardRef","useImperativeHandle","createPortal","useSVGOverlayElement","createSVGOverlay","props","context","attributes","bounds","options","container","document","createElementNS","setAttribute","Object","keys","forEach","name","instance","useSVGOverlay","SVGOverlayComponent","_ref","ref","children","current"],"mappings":";;;AAAA,SAASA,iBAAT,EAA4BC,eAA5B,EAA6CC,kBAA7C,QAAuE,qBAAvE;AACA,SAASC,UAAU,IAAIC,iBAAvB,QAAgD,SAAhD;AACA,SAASC,UAAT,EAAqBC,mBAArB,QAAgD,OAAhD;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAO,IAAMC,oBAAoB,GAAGR,iBAAiB,CAAC,SAASS,gBAAT,CAA0BC,KAA1B,EAAiCC,OAAjC,EAA0C;AAC9F,MACEC,UADF,GAIIF,KAJJ,CACEE,UADF;AAAA,MAEEC,MAFF,GAIIH,KAJJ,CAEEG,MAFF;AAAA,MAGKC,OAHL,4BAIIJ,KAJJ;;AAKA,MAAMK,SAAS,GAAGC,QAAQ,CAACC,eAAT,CAAyB,4BAAzB,EAAuD,KAAvD,CAAlB;AACAF,EAAAA,SAAS,CAACG,YAAV,CAAuB,OAAvB,EAAgC,4BAAhC;;AAEA,MAAIN,UAAU,IAAI,IAAlB,EAAwB;AACtBO,IAAAA,MAAM,CAACC,IAAP,CAAYR,UAAZ,EAAwBS,OAAxB,CAAgC,UAAAC,IAAI,EAAI;AACtCP,MAAAA,SAAS,CAACG,YAAV,CAAuBI,IAAvB,EAA6BV,UAAU,CAACU,IAAD,CAAvC;AACD,KAFD;AAGD;;AAED,SAAO;AACLC,IAAAA,QAAQ,EAAE,IAAInB,iBAAJ,CAAsBW,SAAtB,EAAiCF,MAAjC,EAAyCC,OAAzC,CADL;AAELC,IAAAA,SAAS,EAATA,SAFK;AAGLJ,IAAAA,OAAO,EAAPA;AAHK,GAAP;AAKD,CApBoD,EAoBlDT,kBApBkD,CAA9C;AAqBP,OAAO,IAAMsB,aAAa,GAAGvB,eAAe,CAACO,oBAAD,CAArC;;AAEP,SAASiB,mBAAT,CAA6BC,IAA7B,EAAmCC,GAAnC,EAAwC;AACtC,MACEC,QADF,GAGIF,IAHJ,CACEE,QADF;AAAA,MAEKd,OAFL,4BAGIY,IAHJ;;AAIA,8BAGIF,aAAa,CAACV,OAAD,CAAb,CAAuBe,OAH3B;AAAA,MACEN,QADF,yBACEA,QADF;AAAA,MAEER,SAFF,yBAEEA,SAFF;AAIAT,EAAAA,mBAAmB,CAACqB,GAAD,EAAM;AAAA,WAAMJ,QAAN;AAAA,GAAN,CAAnB;AACA,SAAOR,SAAS,IAAI,IAAb,IAAqBa,QAAQ,IAAI,IAAjC,GAAwC,IAAxC,GAA+C,aAAarB,YAAY,CAACqB,QAAD,EAAWb,SAAX,CAA/E;AACD;;AAED,OAAO,IAAMZ,UAAU,GAAG,aAAaE,UAAU,CAACoB,mBAAD,CAA1C","sourcesContent":["import { createElementHook, createLayerHook, updateMediaOverlay } from '@react-leaflet/core';\nimport { SVGOverlay as LeafletSVGOverlay } from 'leaflet';\nimport { forwardRef, useImperativeHandle } from 'react';\nimport { createPortal } from 'react-dom';\nexport const useSVGOverlayElement = createElementHook(function createSVGOverlay(props, context) {\n  const {\n    attributes,\n    bounds,\n    ...options\n  } = props;\n  const container = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  container.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n  if (attributes != null) {\n    Object.keys(attributes).forEach(name => {\n      container.setAttribute(name, attributes[name]);\n    });\n  }\n\n  return {\n    instance: new LeafletSVGOverlay(container, bounds, options),\n    container,\n    context\n  };\n}, updateMediaOverlay);\nexport const useSVGOverlay = createLayerHook(useSVGOverlayElement);\n\nfunction SVGOverlayComponent(_ref, ref) {\n  let {\n    children,\n    ...options\n  } = _ref;\n  const {\n    instance,\n    container\n  } = useSVGOverlay(options).current;\n  useImperativeHandle(ref, () => instance);\n  return container == null || children == null ? null : /*#__PURE__*/createPortal(children, container);\n}\n\nexport const SVGOverlay = /*#__PURE__*/forwardRef(SVGOverlayComponent);"]},"metadata":{},"sourceType":"module"}